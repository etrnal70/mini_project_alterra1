// Code generated by mockery 2.12.2. DO NOT EDIT.

package domain

import (
	jwt "secondhand_glossary/internal/middleware/jwt"

	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// MockTokenService is an autogenerated mock type for the TokenService type
type MockTokenService struct {
	mock.Mock
}

// CheckToken provides a mock function with given fields:
func (_m *MockTokenService) CheckToken() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// RefreshAuthToken provides a mock function with given fields:
func (_m *MockTokenService) RefreshAuthToken() (jwt.TokenDetails, error) {
	ret := _m.Called()

	var r0 jwt.TokenDetails
	if rf, ok := ret.Get(0).(func() jwt.TokenDetails); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(jwt.TokenDetails)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewMockTokenService creates a new instance of MockTokenService. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockTokenService(t testing.TB) *MockTokenService {
	mock := &MockTokenService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
